2024-08-29 22:04:41,226 - default_logger - INFO - Starting main process
2024-08-29 22:04:41,226 - default_logger - INFO - Starting main process
2024-08-29 22:04:41,392 - default_logger - INFO - Getting dataset: california
2024-08-29 22:04:41,392 - default_logger - INFO - Getting dataset: california
2024-08-29 22:04:41,392 - default_logger - INFO - Getting dataset: california
2024-08-29 22:04:41,393 - default_logger - INFO - Loading California Housing dataset
2024-08-29 22:04:41,393 - default_logger - INFO - Loading California Housing dataset
2024-08-29 22:04:41,393 - default_logger - INFO - Loading California Housing dataset
2024-08-29 22:04:41,393 - default_logger - INFO - Loading California Housing dataset
2024-08-29 22:04:41,408 - default_logger - INFO - California Housing dataset loaded. Shape: torch.Size([20640, 8])
2024-08-29 22:04:41,408 - default_logger - INFO - California Housing dataset loaded. Shape: torch.Size([20640, 8])
2024-08-29 22:04:41,408 - default_logger - INFO - California Housing dataset loaded. Shape: torch.Size([20640, 8])
2024-08-29 22:04:41,408 - default_logger - INFO - California Housing dataset loaded. Shape: torch.Size([20640, 8])
2024-08-29 22:04:41,413 - default_logger - INFO - Model architecture:
TabularMLP(
  (input_norm): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (time_embedding): SinusoidalEmbedding()
  (mlp): Sequential(
    (0): Linear(in_features=136, out_features=128, bias=True)
    (1): GELU(approximate='none')
    (2): Dropout(p=0.1, inplace=False)
    (3): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (4): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (5): Dropout(p=0.1, inplace=False)
    (6): Linear(in_features=128, out_features=8, bias=True)
  )
)
2024-08-29 22:04:41,413 - default_logger - INFO - Model architecture:
TabularMLP(
  (input_norm): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (time_embedding): SinusoidalEmbedding()
  (mlp): Sequential(
    (0): Linear(in_features=136, out_features=128, bias=True)
    (1): GELU(approximate='none')
    (2): Dropout(p=0.1, inplace=False)
    (3): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (4): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (5): Dropout(p=0.1, inplace=False)
    (6): Linear(in_features=128, out_features=8, bias=True)
  )
)
2024-08-29 22:04:41,413 - default_logger - INFO - Model architecture:
TabularMLP(
  (input_norm): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (time_embedding): SinusoidalEmbedding()
  (mlp): Sequential(
    (0): Linear(in_features=136, out_features=128, bias=True)
    (1): GELU(approximate='none')
    (2): Dropout(p=0.1, inplace=False)
    (3): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (4): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (5): Dropout(p=0.1, inplace=False)
    (6): Linear(in_features=128, out_features=8, bias=True)
  )
)
2024-08-29 22:04:41,413 - default_logger - INFO - Model architecture:
TabularMLP(
  (input_norm): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (time_embedding): SinusoidalEmbedding()
  (mlp): Sequential(
    (0): Linear(in_features=136, out_features=128, bias=True)
    (1): GELU(approximate='none')
    (2): Dropout(p=0.1, inplace=False)
    (3): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (4): Block(
      (ff): Linear(in_features=128, out_features=128, bias=True)
      (act): GELU(approximate='none')
    )
    (5): Dropout(p=0.1, inplace=False)
    (6): Linear(in_features=128, out_features=8, bias=True)
  )
)
